macro (CreateExampleExe base_name)
    add_executable(${base_name} "${base_name}.cc")
    qt5_use_modules(${base_name} Core Widgets)
    target_link_libraries(${base_name}
        ${GTEST_LIBRARIES}
        ${DBSTRUCT_LIBRARY})
endmacro()

CreateExampleExe(example_01)


# the script makes sure that all xml files in schema-xmls
# can be generated by pileschema.py; the results are
# used in unit tests in files with `-test.cc` suffix.

set(XML_IN_DIR "${CMAKE_CURRENT_SOURCE_DIR}/schema-xmls")
set(XML_OUT_DIR "${CMAKE_BINARY_DIR}/Testing/xml")
set(SCHEMA_FILE "${CMAKE_SOURCE_DIR}/dbstruct/")

# an easy way to group files not shown by QCreator
# is to put them in a resource file
file(WRITE "${CMAKE_CURRENT_BINARY_DIR}/xml.qrc"
"<RCC>
    <qresource prefix=\"/\">
")

if (NOT EXISTS "${XML_OUT_DIR}/")
    file(MAKE_DIRECTORY "${XML_OUT_DIR}")
endif()

macro(test_xml_source xml_file)
    unset(xml_file_base)
    get_filename_component(xml_file_base "${xml_file}" NAME_WE)

    if (NOT EXISTS "${XML_OUT_DIR}/${xml_file}/")
        file(MAKE_DIRECTORY "${XML_OUT_DIR}/${xml_file}")
    endif()

    add_test(NAME "test-${xml_file}-sql"
             WORKING_DIRECTORY "${XML_OUT_DIR}"
             COMMAND
                python
                "${CMAKE_SOURCE_DIR}/dbstruct/pileschema.py"
                "--debug"
                "sql"
                "--schema" "${CMAKE_SOURCE_DIR}/dbstruct/PileSchema.xsd"
                "--author" "Test Author"
                "${XML_IN_DIR}/${xml_file}"
                "${XML_OUT_DIR}/${xml_file}/schema.sql")

    execute_process(COMMAND
                        python
                        "${CMAKE_SOURCE_DIR}/dbstruct/pileschema.py"
                        "--debug"
                        "sql"
                        "--schema" "${CMAKE_SOURCE_DIR}/dbstruct/PileSchema.xsd"
                        "--author" "Test Author"
                        "${XML_IN_DIR}/${xml_file}"
                        "${XML_OUT_DIR}/${xml_file}/schema.sql"
                    WORKING_DIRECTORY "${XML_OUT_DIR}")

    add_test(NAME "test-${xml_file}-cpp"
             WORKING_DIRECTORY "${XML_OUT_DIR}"
             COMMAND
                python
                "${CMAKE_SOURCE_DIR}/dbstruct/pileschema.py"
                "--debug"
                "cpp"
                "--schema" "${CMAKE_SOURCE_DIR}/dbstruct/PileSchema.xsd"
                "--author" "Test Author"
                "${XML_IN_DIR}/${xml_file}"
                "${XML_OUT_DIR}/${xml_file}")

    execute_process(COMMAND
                        python
                        "${CMAKE_SOURCE_DIR}/dbstruct/pileschema.py"
                        "--debug"
                        "cpp"
                        "--schema" "${CMAKE_SOURCE_DIR}/dbstruct/PileSchema.xsd"
                        "--author" "Test Author"
                        "${XML_IN_DIR}/${xml_file}"
                        "${XML_OUT_DIR}/${xml_file}"
                    WORKING_DIRECTORY "${XML_OUT_DIR}")

    file(APPEND "${CMAKE_CURRENT_BINARY_DIR}/xml.qrc"
        "<file alias=\"${xml_file}\">${XML_IN_DIR}/${xml_file}</file>
")
    file(APPEND "${CMAKE_CURRENT_BINARY_DIR}/xml.qrc"
        "<file alias=\"${xml_file}.sql\">${XML_OUT_DIR}/${xml_file}/schema.sql</file>
")

    if (NOT EXISTS "${XML_IN_DIR}/${xml_file_base}-test.cc")
        file(WRITE  "${XML_IN_DIR}/${xml_file_base}-test.cc"
"// test using ${xml_file} as input
#include \"../schema-xmls.h\"

#define SRC_XML_FILE \":/${xml_file_base}.xml\"
#define SRC_SQL_FILE \":/${xml_file_base}.xml.sql\"

TEST(${xml_file_base}, tryme) {
    TMP_FILE;
    SchemaXmlsHelper::executeSchemaFile (
        s_database, QLatin1String(SRC_SQL_FILE));

}

")
    endif()


endmacro()

file(GLOB ALL_SCHEMA_XMLS
     RELATIVE "${XML_IN_DIR}"
     "${XML_IN_DIR}/*.xml")

foreach(xml_file ${ALL_SCHEMA_XMLS})
    test_xml_source(${xml_file})
endforeach()

file(GLOB ALL_SCHEMA_CCS
     RELATIVE "${CMAKE_CURRENT_SOURCE_DIR}"
     "${XML_IN_DIR}/*.cc")

file(APPEND "${CMAKE_CURRENT_BINARY_DIR}/xml.qrc"
"   </qresource>
</RCC>
")
qt5_add_resources(RES_OUT "${CMAKE_CURRENT_BINARY_DIR}/xml.qrc")

if (ALL_SCHEMA_CCS)
     list( REMOVE_DUPLICATES ALL_SCHEMA_CCS )
     add_executable("schema-test"
         ${ALL_SCHEMA_CCS}
         "schema-xmls.cc"
         ${RES_OUT}
     )
     qt5_use_modules("schema-test" Core Widgets Sql)
     target_link_libraries ( "schema-test"
         ${GTEST_BOTH_LIBRARIES}
         ${DBSTRUCT_LIBRARY}
     )
     set ( props "${PROJECT_NAME_UPPER}_INTERNAL_TESTS=1")
     set_target_properties ( "schema-test"
         PROPERTIES COMPILE_DEFINITIONS "${props}"
     )

     add_test(NAME "schema-test"
              WORKING_DIRECTORY "${CMAKE_BINARY_DIR}/build/bin"
              COMMAND "schema-test")
endif (ALL_SCHEMA_CCS)


